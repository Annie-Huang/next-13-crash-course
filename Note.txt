Next.js 13 Crash Course | App Directory, React Server Components & More (https://www.youtube.com/watch?v=Y6KDk5iyrYE)

https://github.com/Annie-Huang/next_13_crash
-------------------------------------------------------------------------------

PS C:\react> npx create-next-app@latest
√ What is your project named? ... next_13_crash
√ Would you like to use TypeScript with this project? ... No / Yes		<--------- No
√ Would you like to use ESLint with this project? ... No / Yes			<--------- No
√ Would you like to use `src/` directory with this project? ... No / Yes	<--------- No
√ Would you like to use experimental `app/` directory with this project? ... No / Yes	<--------- Yes
√ What import alias would you like configured? ... @/*
Creating a new Next.js app in C:\react\next_13_crash.


PS C:\react\next-13-crash-course> npm run dev


http://localhost:3000/
http://localhost:3000/about
http://localhost:3000/about/team


Advantages of React Serverside Component (RSC):
- Load faster - Don't have to wait for the JavaScript to load
- Smaller client bundle size
- SEO friendly
- Access to resources the client can't access
- Hide sensitive data from the client
- More secure against XSS attacks
- Improved developer experience

Just like with anything else, there are also disadvantages:
- Not as interactive
- No component state. We can not use the `useState` hook.
- No component lifecycle medthods. We can not use the `useEffect` hook.

